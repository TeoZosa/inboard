name: builds

on:
  push:
    branches: [develop, master]
    tags:
      - "[0-9v]+.[0-9]+.[0-9a-z]+"
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.set_image_name.outputs.image_name }}
      repo_name: ${{ steps.set_repo_name.outputs.repo_name }}
    steps:
      - uses: actions/checkout@v2
      - name: Convert repo name to lowercase for Docker
        # https://github.com/docker/build-push-action/issues/37
        id: set_repo_name
        run: echo ::set-output name=repo_name::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
      - name: Set Docker image name
        id: set_image_name
        run: |
          echo ::set-output name=image_name::${{ format(
            'docker.pkg.github.com/{0}/{1}:{2}',
            steps.set_repo_name.outputs.repo_name,
            env.APP_NAME,
            steps.set_build_env.outputs.build_env
          ) }}
  checks:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Set PY environment variable for caching
        run: echo "::set-env name=PY::$(python --version --version | sha256sum | cut -d' ' -f1)"
      - name: Set up Poetry cache for Python dependencies
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ env.PY }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-${{ env.PY }}-
      - name: Set up pre-commit cache
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ env.PY }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: ${{ runner.os }}-pre-commit-${{ env.PY }}-
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run pre-commit hooks
        run: pre-commit run --all-files
      - name: Run unit tests
        run: pytest
  build:
    runs-on: ubuntu-latest
    needs: [setup, checks]
    strategy:
      matrix:
        target: [fastapi, starlette]
    steps:
      - uses: actions/checkout@v2
      - name: Build base image
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: docker.pkg.github.com
          repository: ${{ needs.setup.outputs.repo_name }}
          target: base
          tags: latest
          tag_with_ref: ${{ startsWith(github.ref, 'refs/tags/') }}
          add_git_labels: true
          cache_froms: python:3.8, docker.pkg.github.com/br3ndonland/inboard/base:latest
      - name: Build downstream images
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: docker.pkg.github.com
          repository: ${{ needs.setup.outputs.repo_name }}
          target: ${{ matrix.target }}
          tags: latest
          tag_with_ref: ${{ startsWith(github.ref, 'refs/tags/') }}
          add_git_labels: true
