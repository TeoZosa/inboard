name: tests

on:
  pull_request:
  push:
    branches: [master, develop]
    paths:
      - "**.lock"
      - "**.py"
      - "**.toml"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Set PY environment variable for caching
        run: echo "::set-env name=PY::$(python --version --version | sha256sum | cut -d' ' -f1)"
      - name: Set up Poetry cache for Python dependencies
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ env.PY }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-${{ env.PY }}-
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install --no-interaction -E fastapi
      - name: Run unit tests
        run: pytest
